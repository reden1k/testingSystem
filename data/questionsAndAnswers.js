export const singleAnswerQuestions = [
    { 
        question: "Что такое JavaScript?",
        1: "Язык программирования",
        2: "Браузер",
        3: "HTML",
        4: "CSS",
        answers: ["Язык программирования"]
    },
    {
        question: "Что делает оператор && в JavaScript?",
        1: " Возвращает true, если оба операнда истинны ",
        2: "Создает битовое ИЛИ обоих операндов ",
        3: "Создает логическое ИЛИ обоих операндов ",
        4: "Возвращает true, если хотя бы один из операндов истинен",
        answers: [" Возвращает true, если оба операнда истинны "]
    },
    { 
        question: "Какой оператор используется для строгого сравнения в JavaScript?",
        1: "===",
        2: "!=",
        3: "==",
        4: "=",
        answers: ["==="]
    },
    { 
        question: "Как объявить переменную в JavaScript?",
        1: "let myVar = 5;",
        2: "declare myVar = 5;",
        3: "int myVar = 5;",
        4: "$myVar = 5;",
        answers: ["let myVar = 5;"]
    },
    { 
        question: "Что делает оператор === в JavaScript?",
        1: "Сравнивает два значения на равенство с приведением типов.",
        2: "Присваивает одно значение другому.",
        3: "Сравнивает два значения на неравенство.",
        4: "Сравнивает два значения на равенство без приведения типов.",
        answers: ["Сравнивает два значения на равенство с приведением типов."]
    },
    { 
        question: "Какая функция используется для преобразования строки в число?",
        1: "Number()",
        2: "toInt()",
        3: "parseStr()",
        4: "convert()",
        answers: ["Number()"]
    },
    { 
        question: "Какие значения в JavaScript считаются ‘falsy’?",
        1: "0, ‘’, null, undefined, NaN, и false",
        2: "Только 0 и ‘’",
        3: "Только null и undefined",
        4: "Все значения считаются истинными",
        answers: ["0, ‘’, null, undefined, NaN, и false"]
    },
    { 
        question: "Как в JavaScript можно скопировать массив ?",
        1: "Используя оператор распределения ...: let newArray = [...oldArray];.",
        2: "С использованием метода Array.copy().",
        3: "Присвоив один массив другому: let newArray = oldArray;.",
        4: "С помощью метода Array.clone().",
        answers: ["Используя оператор распределения ...: let newArray = [...oldArray];."]
    },
    { 
        question: "Какой метод позволяет добавить новый элемент в конец массива?",
        1: "push()",
        2: "pop()",
        3: "shift()",
        4: "unshift()",
        answers: ["push()"]
    },
    { 
        question: "Какой метод позволяет добавить новый элемент в начало массива?",
        1: "shift()",
        2: "push()",
        3: "pop()",
        4: "unshift()",
        answers: ["shift()"]
    },
    { 
        question: "Какой метод позволяет удалить последний элемент массива?",
        1: "pop()",
        2: "shift()",
        3: "push()",
        4: "unshift()",
        answers: ["pop()"]
    },
    { 
        question: "Какой метод используется для объединения двух или более массивов в JavaScript?",
        1: "concat()",
        2: "join()",
        3: "merge()",
        4: "combine()",
        answers: ["concat()"]
    },
    { 
        question: "Как можно удалить последний элемент из массива в JavaScript?",
        1: "pop()",
        2: "removeLast()",
        3: "deleteEnd()",
        4: "spliceEnd()",
        answers: ["pop()"]
    },
    { 
        question: "Как можно найти индекс определенного элемента в массиве в JavaScript?",
        1: "indexOf()",
        2: "searchIndex()",
        3: "findIndex()",
        4: "getIndex()",
        answers: ["indexOf()"]
    },
    { 
        question: "Как можно определить, является ли один массив подмножеством другого массива в JavaScript?",
        1: "Путем сравнения длин массивов",
        2: "Используя метод subsetOf()",
        3: "С помощью метода includesAll()",
        4: "Через цикл и проверку каждого элемента",
        answers: ["Путем сравнения длин массивов"]
    },
];

  export const multipleAnswersQuestions = [
    {
        question: 'Какие из следующих значений являются ложными в JavaScript?',
        1: 'false',
        2: '0',
        3: `""`,
        4: 'null',
        answers: ['false', '0']
    },
    {
        question: 'Какие из следующих методов массива изменяют исходный массив?',
        1: '.splice()',
        2: '.push()',
        3: `""`,
        4: '.sort()',
        answers: ['.splice()', '.push()']
    },
    {
        question: 'Какие типы данных в JavaScript являются примитивами?',
        1: 'Строки',
        2: 'Символы',
        3: 'Объекты',
        4: 'Функции',
        answers: ['Строки', 'Символы']
    },
    {
        question: 'Какие операторы используются для сравнения значений на равенство с приведением типов?',
        1: '==',
        2: '!=',
        3: '===',
        4: '!==',
        answers: ['==', '!=']
    },
    {
        question: 'Какие методы для работы со строками в JavaScript возвращают новую строку?',
        1: '.concat()',
        2: '.toUpperCase()',
        3: '.push()',
        4: '.pop()',
        answers: ['.concat()', '.toUpperCase()']
    },
    {
        question: 'Какие из следующих методов массивов добавляют или удаляют элементы?',
        1: '.splice()',
        2: '.push()',
        3: '.slice()',
        4: '.map()',
        answers: ['.splice()', '.push()']
    },
    {
        question: 'Какие операторы JavaScript используются для работы с логическими значениями?',
        1: '&&',
        2: '||',
        3: '+=',
        4: '-=',
        answers: ['&&', '||']
    },
    {
        question: 'Какие из следующих утверждений верны относительно стрелочных функций в JavaScript?',
        1: 'Не имеют собственного контекста выполнения `this`',
        2: 'Не могут использовать ключевое слово `new`',
        3: 'Всегда анонимны',
        4: 'Могут использоваться как конструкторы',
        answers: ['Не имеют собственного контекста выполнения `this`', 'Не могут использовать ключевое слово `new`']
    },
    {
        question: 'Какие методы используются для преобразования объектов в строки в JavaScript?',
        1: 'JSON.stringify()',
        2: 'toString()',
        3: 'toLocaleString()',
        4: 'JSON.parse()',
        answers: ['JSON.stringify()', 'toString()']
    },
    {
        question: 'Какие из следующих операторов JavaScript используются для управления потоком выполнения программы?',
        1: 'if',
        2: 'switch',
        3: 'typeof',
        4: 'instanceof',
        answers: ['if', 'switch']
    },
    {
        question: 'Какие из следующих выражений создают новый массив?',
        1: '[]',
        2: 'new Array()',
        3: '{}',
        4: 'new Object()',
        answers: ['[]', 'new Array()']
    },
    {
        question: 'Какие из следующих утверждений верны для const в JavaScript?',
        1: 'Нельзя изменять значение',
        2: 'Блочная область видимости',
        3: 'Можно изменять значение',
        4: 'Можно объявить без инициализации',
        answers: ['Нельзя изменять значение', 'Блочная область видимости']
    },
    {
        question: 'Какие из этих событий мыши существуют в JavaScript?',
        1: 'onclick',
        2: 'onmouseover',
        3: 'onkeyup',
        4: 'onkeydown',
        answers: ['onclick', 'onmouseover']
    },
    {
        question: 'Какие из этих методов могут изменить исходный массив?',
        1: '.reverse()',
        2: '.sort()',
        3: '.filter()',
        4: '.map()',
        answers: ['.reverse()', '.sort()']
    },
    {
        question: 'Какие из следующих пунктов являются действительными способами объявления функций в JavaScript?',
        1: 'Функциональное выражение',
        2: 'Объявление функции',
        3: 'Стрелочная функция',
        4: 'Объявление переменной',
        answers: ['Функциональное выражение', 'Объявление функции']
    },
];

export const textAnswersQuestions = [
	//1
	{
		question: 'Опишите цикл for в JavaScript',
		answer: 'Повторение действий',
		textInput: true,
	},

	//2
	{
		question: 'Какое ключевое слово используется для создания переменной?',
		answer: 'let',
		textInput: true,
	},

	//3
	{
		question:
			'Какое значение в JavaScript используется для обозначения логического "истина"?',
		answer: 'true',
		textInput: true,
	},

	//4
	{
		question: 'Какой метод используется для вывода данных в консоль?',
		answer: 'log',
		textInput: true,
	},

	//5
	{
		question: 'Как начинается комментарий на одну строку в JavaScript?',
		answer: '//',
		textInput: true,
	},

	//6
	{
		question:
			'Как называется структура данных, используемая для хранения множества значений в одной переменной?',
		answer: 'массив',
		textInput: true,
	},

	//7
	{
		question:
			'Какой оператор используется для присваивания значения переменной?',
		answer: '=',
		textInput: true,
	},

	//8
	{
		question: 'Какое слово используется для создания нового объекта?',
		answer: 'new',
		textInput: true,
	},

	//9
	{
		question:
			'Как называется операция, преобразующая переменную в логический тип?',
		answer: 'Boolean',
		textInput: true,
	},

	//10
	{
		question: 'Что возвращает метод массива indexOf(), если элемент не найден?',
		answer: '-1',
		textInput: true,
	},

	//11
	{
		question: 'Какой метод у строк в JavaScript возвращает длину строки?',
		answer: 'length',
		textInput: true,
	},

	//12
	{
		question: 'Какой символ используется для разделения параметров в функции?',
		answer: 'запятая',
		textInput: true,
	},

	//13
	{
		question: 'Какой метод добавляет элемент в начало массива?',
		answer: 'unshift',
		textInput: true,
	},

	//14
	{
		question: 'Какой метод удаляет последний элемент из массива?',
		answer: 'pop()',
		textInput: true,
	},

	//15
	{
		question: 'Что делает оператор `===` ?',
		answer: 'Сравнивает',
		textInput: true,
	},
];